C:\Users\slava_koreec\Documents\GitHub\python_training\env\Scripts\python.exe "C:\Program Files (x86)\JetBrains\PyCharm Community Edition 5.0.4\helpers\pycharm\pytestrunner.py" -p pytest_teamcity C:/Users/slava_koreec/Documents/GitHub/python_training/test/test_del_group.py
Testing started at 11:19 PM ...
============================= test session starts =============================
platform win32 -- Python 3.5.1, pytest-2.9.0, py-1.4.31, pluggy-0.3.1
rootdir: C:\Users\slava_koreec\Documents\GitHub\python_training\test, inifile: 
collected 1 items

..\..\..\..\..\..\Users\slava_koreec\Documents\GitHub\python_training\test\test_del_group.py F
app = <fixture.application.Application object at 0x033D48B0>

    def test_delete_first_group(app):
        if app.group.count() == 0:
            app.group.create(Group(name = "test"))
>       app.group.delete_first_group()

C:\Users\slava_koreec\Documents\GitHub\python_training\test\test_del_group.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\slava_koreec\Documents\GitHub\python_training\fixture\group.py:40: in delete_first_group
    wd.find_element_by_xpath("delete").click()
C:\Users\slava_koreec\Documents\GitHub\python_training\env\lib\site-packages\selenium\webdriver\remote\webdriver.py:258: in find_element_by_xpath
    return self.find_element(by=By.XPATH, value=xpath)
C:\Users\slava_koreec\Documents\GitHub\python_training\env\lib\site-packages\selenium\webdriver\remote\webdriver.py:712: in find_element
    {'using': by, 'value': value})['value']
C:\Users\slava_koreec\Documents\GitHub\python_training\env\lib\site-packages\selenium\webdriver\remote\webdriver.py:201: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x033D4C10>
response = {'status': 500, 'value': '{"name":"findElement","sessionId":"79a27606-0a26-4bc6-9dd2-cd87793be105","status":7,"value":...pidv727w9/extensions/fxdriver@googlecode.com/components/command-processor.js","lineNumber":12561,"columnNumber":5}]}}'}

    def check_response(self, response):
        """
            Checks that a JSON response from the WebDriver does not have an error.
    
            :Args:
             - response - The JSON response from the WebDriver server as a dictionary
               object.
    
            :Raises: If the response contains an error message.
            """
        status = response.get('status', None)
        if status is None or status == ErrorCode.SUCCESS:
            return
    
        value = None
        message = response.get("message", "")
        screen = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    status = value.get('error', None)
                    if status is None:
                        status = value["status"]
                        message = value["value"]
                        if not isinstance(message, basestring):
                            value = message
                            try:
                                message = message['message']
                            except TypeError:
                                message = None
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = WebDriverException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = WebDriverException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        else:
            exception_class = WebDriverException
        if value == '' or value is None:
            value = response['value']
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        if 'stackTrace' in value and value['stackTrace']:
            stacktrace = []
            try:
                for frame in value['stackTrace']:
                    line = self._value_or_default(frame, 'lineNumber', '')
                    file = self._value_or_default(frame, 'fileName', '<anonymous>')
                    if line:
                        file = "%s:%s" % (file, line)
                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')
                    if 'className' in frame:
                        meth = "%s.%s" % (frame['className'], meth)
                    msg = "    at %s (%s)"
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException and 'alert' in value:
            raise exception_class(message, screen, stacktrace, value['alert'].get('text'))
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: {"method":"xpath","selector":"delete"}
E       Stacktrace:
E           at FirefoxDriver.prototype.findElementInternal_ (file:///C:/Users/SLAVA_~1/AppData/Local/Temp/tmpidv727w9/extensions/fxdriver@googlecode.com/components/driver-component.js:10723)
E           at FirefoxDriver.prototype.findElement (file:///C:/Users/SLAVA_~1/AppData/Local/Temp/tmpidv727w9/extensions/fxdriver@googlecode.com/components/driver-component.js:10732)
E           at DelayedCommand.prototype.executeInternal_/h (file:///C:/Users/SLAVA_~1/AppData/Local/Temp/tmpidv727w9/extensions/fxdriver@googlecode.com/components/command-processor.js:12614)
E           at DelayedCommand.prototype.executeInternal_ (file:///C:/Users/SLAVA_~1/AppData/Local/Temp/tmpidv727w9/extensions/fxdriver@googlecode.com/components/command-processor.js:12619)
E           at DelayedCommand.prototype.execute/< (file:///C:/Users/SLAVA_~1/AppData/Local/Temp/tmpidv727w9/extensions/fxdriver@googlecode.com/components/command-processor.js:12561)

C:\Users\slava_koreec\Documents\GitHub\python_training\env\lib\site-packages\selenium\webdriver\remote\errorhandler.py:194: NoSuchElementException


================================== FAILURES ===================================
___________________________ test_delete_first_group ___________________________

app = <fixture.application.Application object at 0x033D48B0>

    def test_delete_first_group(app):
        if app.group.count() == 0:
            app.group.create(Group(name = "test"))
>       app.group.delete_first_group()

C:\Users\slava_koreec\Documents\GitHub\python_training\test\test_del_group.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\slava_koreec\Documents\GitHub\python_training\fixture\group.py:40: in delete_first_group
    wd.find_element_by_xpath("delete").click()
C:\Users\slava_koreec\Documents\GitHub\python_training\env\lib\site-packages\selenium\webdriver\remote\webdriver.py:258: in find_element_by_xpath
    return self.find_element(by=By.XPATH, value=xpath)
C:\Users\slava_koreec\Documents\GitHub\python_training\env\lib\site-packages\selenium\webdriver\remote\webdriver.py:712: in find_element
    {'using': by, 'value': value})['value']
C:\Users\slava_koreec\Documents\GitHub\python_training\env\lib\site-packages\selenium\webdriver\remote\webdriver.py:201: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x033D4C10>
response = {'status': 500, 'value': '{"name":"findElement","sessionId":"79a27606-0a26-4bc6-9dd2-cd87793be105","status":7,"value":...pidv727w9/extensions/fxdriver@googlecode.com/components/command-processor.js","lineNumber":12561,"columnNumber":5}]}}'}

    def check_response(self, response):
        """
            Checks that a JSON response from the WebDriver does not have an error.
    
            :Args:
             - response - The JSON response from the WebDriver server as a dictionary
               object.
    
            :Raises: If the response contains an error message.
            """
        status = response.get('status', None)
        if status is None or status == ErrorCode.SUCCESS:
            return
    
        value = None
        message = response.get("message", "")
        screen = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    status = value.get('error', None)
                    if status is None:
                        status = value["status"]
                        message = value["value"]
                        if not isinstance(message, basestring):
                            value = message
                            try:
                                message = message['message']
                            except TypeError:
                                message = None
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = WebDriverException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = WebDriverException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        else:
            exception_class = WebDriverException
        if value == '' or value is None:
            value = response['value']
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        if 'stackTrace' in value and value['stackTrace']:
            stacktrace = []
            try:
                for frame in value['stackTrace']:
                    line = self._value_or_default(frame, 'lineNumber', '')
                    file = self._value_or_default(frame, 'fileName', '<anonymous>')
                    if line:
                        file = "%s:%s" % (file, line)
                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')
                    if 'className' in frame:
                        meth = "%s.%s" % (frame['className'], meth)
                    msg = "    at %s (%s)"
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException and 'alert' in value:
            raise exception_class(message, screen, stacktrace, value['alert'].get('text'))
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: {"method":"xpath","selector":"delete"}
E       Stacktrace:
E           at FirefoxDriver.prototype.findElementInternal_ (file:///C:/Users/SLAVA_~1/AppData/Local/Temp/tmpidv727w9/extensions/fxdriver@googlecode.com/components/driver-component.js:10723)
E           at FirefoxDriver.prototype.findElement (file:///C:/Users/SLAVA_~1/AppData/Local/Temp/tmpidv727w9/extensions/fxdriver@googlecode.com/components/driver-component.js:10732)
E           at DelayedCommand.prototype.executeInternal_/h (file:///C:/Users/SLAVA_~1/AppData/Local/Temp/tmpidv727w9/extensions/fxdriver@googlecode.com/components/command-processor.js:12614)
E           at DelayedCommand.prototype.executeInternal_ (file:///C:/Users/SLAVA_~1/AppData/Local/Temp/tmpidv727w9/extensions/fxdriver@googlecode.com/components/command-processor.js:12619)
E           at DelayedCommand.prototype.execute/< (file:///C:/Users/SLAVA_~1/AppData/Local/Temp/tmpidv727w9/extensions/fxdriver@googlecode.com/components/command-processor.js:12561)

C:\Users\slava_koreec\Documents\GitHub\python_training\env\lib\site-packages\selenium\webdriver\remote\errorhandler.py:194: NoSuchElementException
========================== 1 failed in 3.90 seconds ===========================

Process finished with exit code 0
